plugins {
  id 'org.sonarqube' version "3.0"
}

buildScan {
  termsOfServiceUrl = 'https://gradle.com/terms-of-service'
  termsOfServiceAgree = 'yes'
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'java-library'
  apply plugin: 'checkstyle'
  apply plugin: 'jacoco'

  group 'de.softwartechnik.lucifer'
  version '1.0.0-SNAPSHOT'

  repositories {
    jcenter()
    google()
    mavenLocal()
    maven {
      url 'https://repository.jboss.org/nexus/content/repositories/releases/'
    }
    maven {
      url 'https://repository.jboss.org/nexus/content/repositories/thirdparty-releases'
    }
    mavenCentral()
  }

  checkstyle {
    toolVersion '8.27'
    checkstyleTest.enabled = false
  }

  dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'org.junit.platform:junit-platform-engine:1.6.2'
    testImplementation 'org.mockito:mockito-core:3.7.7'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.5.0'
  }

  test {
    useJUnitPlatform()
  }

  java {
    withSourcesJar()
    withJavadocJar()
  }
}

task codeCoverageReport(type: JacocoReport) {
  executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

  subprojects.each {
    sourceSets it.sourceSets.main
  }

  reports {
    xml.enabled = true
    html.enabled = true
  }
}

sonarqube {
  properties {
    property "sonar.projectKey", "softwartechnik_lucifer-rising"
    property "sonar.projectName", "Lucifer Rising"
    property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
  }
}
